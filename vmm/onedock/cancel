#!/bin/bash
#
# ONEDock - Docker support for ONE (as VMs)
# Copyright (C) GRyCAP - I3M - UPV 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../onedock.sh
setup_wn
log_onedock_debug "$0 $@"
source ${DRIVER_PATH}/vmmfnc.sh

NAME=$1

CONTAINER_XML=$(docker inspect "$NAME")
DEVICES=$(echo "$CONTAINER_XML" | jq ".[].HostConfig.Devices[].PathOnHost")
if [ $? -eq 0 ]; then
    for device in $DEVICES; do
        devname=${device:1:-1}
        if [ "${devname::8}" == "/dev/nbd" ]; then
            log_onedock_debug "cleaning up device $devname"
            cleanup_disk $devname > /dev/null 2> /dev/null
        else
            log_onedock_debug "do not how to do with device $device... skipping"
        fi
    done
fi

log_onedock_debug $(docker stop "$NAME" && docker rm "$NAME")
ERR=$?

log_onedock_debug $(sudo systemctl stop vncterm-"$NAME".service)
ERR=$?

log_onedock_debug $(sudo systemctl disable vncterm-"$NAME".service)
ERR=$?

# This is just to clean possible snapshots (maybe there are none)
DISKIMAGENAME=$(build_dock_name "$LOCAL_SERVER" "" "$NAME" "0")
docker rmi "$DISKIMAGENAME" > /dev/null 2> /dev/null

exit 0
